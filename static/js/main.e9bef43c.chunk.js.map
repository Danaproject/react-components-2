{"version":3,"sources":["components/Container/Container.module.css","components/TodoList/TodoList.js","components/TodoEditor/TodoEditor.jsx","components/Filter/Filter.jsx","components/Container/Container.jsx","App.js","index.js"],"names":["module","exports","TodoList","todos","onDeleteTodo","onToggleCompleted","onMakeItemClassName","className","map","id","text","completed","type","checked","onChange","onClick","TodoEditor","state","message","handleChange","e","setState","currentTarget","value","handleSubmit","preventDefault","props","onSubmit","this","Component","Filter","Container","children","styles","App","initialTodos","filter","addTodo","todo","shortid","generate","deleteTodo","todoId","prevState","makeItemClassName","itemClasses","push","join","toggleCompleted","changeFilter","getVisibleTodos","normalizedFilter","toLowerCase","includes","calculateCompletedTodos","reduce","total","totalTodoCount","length","completedTodoCount","visibleTodos","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e9bef43c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__3tQ9A\"};","import './TodoList.css';\n\nconst TodoList = ({ todos, onDeleteTodo, onToggleCompleted, onMakeItemClassName }) => (\n    <ul className=\"TodoList\">\n        {todos.map(({ id, text, completed }) => (\n        <li key={id} className={onMakeItemClassName(completed)}>\n        <input\n          type=\"checkbox\"\n          className=\"TodoList__checkbox\"\n          checked={completed}\n          onChange={() => onToggleCompleted(id)}\n        />\n        <p className=\"TodoList__text\">{text}</p>\n        <button\n            type=\"button\"\n            className=\"TodoList__btn\"\n            onClick={() => onDeleteTodo(id)}>\n            Delete\n        </button>\n      </li>\n    ))}\n  </ul>\n);\n\nexport default TodoList;","import React, { Component } from 'react';\nimport './TodoEditor.css';\n\nclass TodoEditor extends Component {\n  state = {\n    message: '',\n  };\n\n  handleChange = e => {\n    this.setState({ message: e.currentTarget.value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    this.props.onSubmit(this.state.message);\n\n    this.setState({ message: '' });\n  };\n\n  render() {\n    return (\n      <form className=\"TodoEditor\" onSubmit={this.handleSubmit}>\n        <textarea\n          className=\"TodoEditor__textarea\"\n          value={this.state.message}\n          onChange={this.handleChange}\n        ></textarea>\n        <button type=\"submit\" className=\"TodoEditor__button\">\n          Save\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default TodoEditor;","import './Filter.css';\n\nconst Filter = ({ value, onChange }) => (\n  <label className=\"Filter__label\">\n    Filter by name\n    <input type=\"text\" value={value} className=\"Filter\" onChange={onChange} />\n  </label>\n);\n\nexport default Filter;","import styles from './Container.module.css';\n\nconst Container = ({ children }) => <div className={styles.Container}>{children}</div>;\n\nexport default Container;","import { Component } from 'react';\nimport shortid from 'shortid';\nimport TodoList from './components/TodoList';\nimport TodoEditor from './components/TodoEditor';\nimport Filter from './components/Filter';\nimport initialTodos from './todos.json';\nimport Container from './components/Container/Container';\n\nclass App extends Component {\n  state = {\n    todos: initialTodos,\n    filter: '',\n  };\n\n  addTodo = text => {\n    const todo = {\n      id: shortid.generate(),\n      text,\n      completed: false,\n    };\n\n    this.setState(({ todos }) => ({\n      todos: [todo, ...todos],\n    }));\n  };\n\n  deleteTodo = todoId => {\n    this.setState(prevState => ({\n      todos: prevState.todos.filter(todo => todo.id !== todoId),\n    }));\n  };\n\n  makeItemClassName = completed => {\n    const itemClasses = ['TodoList__item'];\n\n    if (completed) {\n      itemClasses.push('TodoList__item--completed');\n    }\n    return itemClasses.join(' ');\n  };\n\n  toggleCompleted = todoId => {\n    // this.setState(prevState => ({\n    //   todos: prevState.todos.map(todo => {\n    //     if (todo.id === todoId) {\n    //       return {\n    //         ...todo,\n    //         completed: !todo.completed,\n    //       };\n    //     }\n\n    //     return todo;\n    //   }),\n    // }));\n\n    this.setState(({ todos }) => ({\n      todos: todos.map(todo =>\n        todo.id === todoId ? { ...todo, completed: !todo.completed } : todo,\n      ),\n    }));\n  };\n\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  getVisibleTodos = () => {\n    const { filter, todos } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return todos.filter(todo =>\n      todo.text.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  calculateCompletedTodos = () => {\n    const { todos } = this.state;\n\n    return todos.reduce(\n      (total, todo) => (todo.completed ? total + 1 : total),\n      0,\n    );\n  };\n\n  render() {\n    const { todos, filter } = this.state;\n    const totalTodoCount = todos.length;\n    const completedTodoCount = this.calculateCompletedTodos();\n    const visibleTodos = this.getVisibleTodos();\n\n    return (\n      <Container>\n        <h1>To-do list</h1>\n\n        <div>\n          <p>Total amount: {totalTodoCount}</p>\n          <p>Number of Completed: {completedTodoCount}</p>\n        </div>\n\n        <TodoEditor onSubmit={this.addTodo} />\n        <Filter value={filter} onChange={this.changeFilter} />\n\n        <TodoList\n          todos={visibleTodos}\n          onDeleteTodo={this.deleteTodo}\n          onToggleCompleted={this.toggleCompleted}\n          onMakeItemClassName={this.makeItemClassName}\n        />\n      </Container>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\nimport './styles.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}